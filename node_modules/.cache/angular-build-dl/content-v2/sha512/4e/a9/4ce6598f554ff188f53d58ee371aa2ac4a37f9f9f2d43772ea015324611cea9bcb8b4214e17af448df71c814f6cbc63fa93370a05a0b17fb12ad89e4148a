{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/auth.guard.ts","./src/app/customer/customer-edit.component.ts","./src/app/customer/customer-edit.component.html","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/customer/customer.module.ts","./src/app/customer/customer.routes.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/signup.component.ts","./src/app/home/signup.component.html","./src/app/order/order-view.component.ts","./src/app/order/order-view.component.html","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/order/order.module.ts","./src/app/order/order.routes.ts","./src/app/vendor/vendor-edit.component.ts","./src/app/vendor/vendor-edit.component.html","./src/app/vendor/vendor.component.ts","./src/app/vendor/vendor.module.ts","./src/app/vendor/vendor.routes.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n\n  title = 'DBMS Project';\n  constructor(\n    protected router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  logout() {\n        sessionStorage.clear();\n        this.toastr.success('Bye, Logged Out Successfully');\n        return this.router.navigate(['']);\n    }\n}\n","<h1 class=\"text-center\" routerLink=\"/\">DBMS Project <button type=\"button\" class=\"btn btn-success\" (click)=\"logout()\">Logout</button></h1>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app.routes';\nimport { CustomerModule } from './customer/customer.module';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './home/signup.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OrderModule } from './order/order.module';\nimport { VendorModule } from './vendor/vendor.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SignupComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    CustomerModule,\n    VendorModule,\n    OrderModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      timeOut: 3500,\n      positionClass: 'toast-top-right',\n      progressBar: true,\n      closeButton: true,\n      extendedTimeOut: 2000\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './home/signup.component';\nimport { AuthGuard } from './auth.guard';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full'\n  }, {\n    path: 'signup',\n    component: SignupComponent,\n  }, {\n    path: 'customer',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./customer/customer.module').then(m => m.CustomerModule),\n  }, {\n    path: 'vendor',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./vendor/vendor.module').then(m => m.VendorModule),\n  }, {\n    path: 'order',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./order/order.module').then(m => m.OrderModule),\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n    if (currentUser) {\n      return true;\n    }\n\n    this.router.navigate(['']);\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({ templateUrl: './customer-edit.component.html' })\nexport class CustomerEditComponent implements OnInit {\n\n  public customer = {\n    customerid: null,\n    customername: '',\n    customeremail: '',\n    customerpassword: '',\n    customeraddress1: '',\n    customeraddress2: '',\n    city: '',\n    state: '',\n    zipcode: 0,\n    customerphone: 0\n  };\n  public orders: any = [];\n  public rewards: any;\n  constructor(\n    private http: HttpClient,\n    private activatedRoute: ActivatedRoute,\n    private toastr: ToastrService\n  ) {  }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.params && this.activatedRoute.snapshot.params.id) {\n      this.http.get('/api/customer/' + this.activatedRoute.snapshot.params.id).subscribe(data => Object.assign(this.customer, data));\n\n      this.http.get('/api/customer/' + this.activatedRoute.snapshot.params.id + '/orders').subscribe(data => this.orders = data);\n\n      this.http.get('api/customer/' + this.activatedRoute.snapshot.params.id + '/rewards').subscribe(data => this.rewards = data);\n    };\n  }\n\n  onSubmit() {\n    if (this.customer.customerid) {\n      return this.http.put('api/customer/' + this.customer.customerid, this.customer).subscribe(data => {\n        this.toastr.success(\"Edited Customer Successfully\");\n        return Object.assign(this.customer, data);\n      });\n    }\n    return this.http.post('api/customer/signup', this.customer).subscribe(data => Object.assign(this.customer, data));\n  }\n}\n","<div class=\"container-fluid\">\n  <h1 class=\"text-center\">Customer Information, Reward Points: {{ this.rewards.rewardpoints }}</h1>\n  <div class=\"row\">\n    <div class=\"col\">\n      <form (ngSubmit)=\"onSubmit()\" #customerForm=\"ngForm\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"customer.customername\" name=\"name\" #name=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"customer.customeremail\" name=\"email\" #email=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"customer.customerpassword\" name=\"password\" #password=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"address1\">Address 1</label>\n          <input type=\"text\" class=\"form-control\" id=\"address1\" [(ngModel)]=\"customer.customeraddress1\" name=\"address1\" #address=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"address2\">Address 2</label>\n          <input type=\"text\" class=\"form-control\" id=\"address2\" [(ngModel)]=\"customer.customeraddress2\" name=\"address2\" #address=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"city\">City</label>\n          <input type=\"text\" class=\"form-control\" id=\"city\" [(ngModel)]=\"customer.city\" name=\"city\" #city=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"state\">State</label>\n          <input type=\"text\" class=\"form-control\" id=\"state\" [(ngModel)]=\"customer.state\" name=\"state\" #state=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"zipcode\">Zipcode</label>\n          <input type=\"number\" class=\"form-control\" id=\"zipcode\" [(ngModel)]=\"customer.zipcode\" name=\"zipcode\" #zipcode=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"phone\">Phone Number</label>\n          <input type=\"tel\" pattern=\"[0-9]{10,11}\" class=\"form-control\" id=\"phone\" [(ngModel)]=\"customer.customerphone\" name=\"phone\" #phone=\"ngModel\">\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!customerForm.form.valid\">Submit</button>\n      </form>\n    </div>\n    <div class=\"col\" *ngIf=\"customer.customerid\">\n      <h3 class=\"text-center\">Orders <button type=\"button\" class=\"ml-1 btn btn-success\" routerLink=\"/order\"><i class=\"fas fa-plus\"></i> New Order</button></h3>\n      <div class=\"table-responsive\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Order #</th>\n              <th>Vendor #</th>\n              <th>Total</th>\n              <th>Fulfillment Type</th>\n              <th>Fulfillment Status</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let o of orders\">\n              <td><a routerLink=\"/order/{{o.orderid}}\">{{ o.orderid }}</a></td>\n              <td>{{ o.customerid }}</td>\n              <td>{{ o.ordertotal }}</td>\n              <td>{{ o.deliverytype }}</td>\n              <td>{{ o.orderstatus }}</td>\n              <td>{{ o.datecreated | date }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({ templateUrl: './customer.component.html' })\nexport class CustomerComponent implements OnInit {\n\n  public customers: any;\n  constructor(\n    protected router: Router,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit(): void {\n    this.http.get('/api/customer/list').subscribe(data => {\n      this.customers = data;\n      console.log(data);\n    });\n  }\n\n  edit(id) {\n    console.log(id);\n    return this.router.navigate(['/customer/', id]);\n  }\n\n  delete(id) {\n    return this.http.delete('api/customer/', id).subscribe(() => {console.log(\"good\")});\n  }\n}\n","<div class=\"container\">\n  <div class=\"heading\">\n    <h1>Customers</h1>\n  </div>\n\n  <div class=\"table-responsive\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Customer #</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Address 1</th>\n          <th>Address 2</th>\n          <th>Phone</th>\n          <th>City</th>\n          <th>State</th>\n          <th>Zipcode</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let c of customers\">\n          <td>{{ c.customerid }}</td>\n          <td>{{ c.customername }}</td>\n          <td>{{ c.customeremail }}</td>\n          <td>{{ c.customeraddress1 }}</td>\n          <td>{{ c.customeraddress2 }}</td>\n          <td>{{ c.customerphone }}</td>\n          <td>{{ c?.city }}</td>\n          <td>{{ c?.state }}</td>\n          <td>{{ c.zipcode }}</td>\n          <td>\n            <div class=\"btn-group btn-group-sm\">\n              <button ngbTooltip=\"Edit Customer\" type=\"button\" class=\"btn btn-primary\" (click)=\"edit(c.customerid)\"><i class=\"fas fa-edit\"></i></button>\n              <button ngbTooltip=\"Delete Customer\" type=\"button\" class=\"btn btn-primary\" (click)=\"delete(c.customerid)\"><i class=\"fas fa-trash-alt\"></i></button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CustomerEditComponent } from './customer-edit.component';\nimport { CustomerComponent } from './customer.component';\nimport { CustomerRoutingModule } from './customer.routes';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    FormsModule\n  ],\n  declarations: [\n    CustomerEditComponent,\n    CustomerComponent\n  ]\n})\nexport class CustomerModule {}\n","import { RouterModule, Routes } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\nimport { CustomerEditComponent } from './customer-edit.component';\nimport { NgModule } from '@angular/core';\n\nexport const customerRoutes: Routes = [\n  {\n    path: '',\n    component: CustomerComponent,\n  }, {\n    path: ':id',\n    component: CustomerEditComponent,\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(customerRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CustomerRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({ templateUrl: './home.component.html' })\nexport class HomeComponent {\n\n  public currentUser: any = null;\n  public email: string;\n  public password: string;\n  constructor(\n    protected router: Router,\n    private http: HttpClient,\n    private toastr: ToastrService\n  ) {  }\n\n  public login() {\n    const params = {\n      email: this.email,\n      password: this.password\n    }\n\n    return this.http.post('api/login', { params }).pipe(\n      catchError(err => {\n        this.toastr.error(\"Invalid Credentials\");\n        return throwError(err);\n      })\n    ).subscribe(user => {\n      sessionStorage.setItem('currentUser', JSON.stringify(user));\n      this.currentUser = user;\n      this.toastr.success('Welcome, Logged In Successfully');\n      if (this.currentUser.type === 'vendor') {\n        this.router.navigate(['/vendor/' + this.currentUser.id]);\n      } else {\n        this.router.navigate(['/customer/' + this.currentUser.id]);\n      }\n      return user;\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <h3>Login</h3>\n      <form>\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"email\" placeholder=\"Your Email *\" />\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"password\" placeholder=\"Your Password *\"/>\n        </div>\n        <div class=\"form-group\">\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"login()\">Login</button>\n          <button type=\"button\" class=\"btn btn-primary m-1\" routerLink=\"/signup\">Signup</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({ templateUrl: './signup.component.html' })\nexport class SignupComponent {\n\n  public user: any = {};\n  constructor(\n    protected router: Router,\n    private http: HttpClient,\n    private toastr: ToastrService\n  ) { }\n\n  public onSubmit() {\n    console.log(this.user);\n    if (this.user.type === 'vendor') {\n      return this.http.post('api/vendor/signup', this.user).pipe(\n        catchError(err => {\n          this.toastr.error(\"Something is Wrong\");\n          return throwError(err);\n        })\n      ).subscribe(user => {\n        this.toastr.success(\"Added Vendor Successfully\");\n        return this.router.navigate(['']);\n      });\n    } else {\n      return this.http.post('api/customer/signup', this.user).pipe(\n        catchError(err => {\n          this.toastr.error(\"Something is Wrong\");\n          return throwError(err);\n        })\n      ).subscribe(user => {\n        this.toastr.success(\"Added Customer Successfully\");\n        return this.router.navigate(['']);\n      });\n    }\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"text-center\">Signup</h1>\n  <div class=\"row\">\n    <div class=\"col\">\n      <form (ngSubmit)=\"onSubmit()\" #signupForm=\"ngForm\">\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"radio\" name=\"type\" id=\"vendor\" [(ngModel)]=\"user.type\" [value]=\"'vendor'\">\n          <label class=\"form-check-label\" for=\"vendor\">Vendor</label>\n        </div>\n\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"radio\" name=\"type\" id=\"customer\" [(ngModel)]=\"user.type\" [value]=\"'customer'\">\n          <label class=\"form-check-label\" for=\"customer\">Customer</label>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"name\">Name*</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"user.name\" name=\"name\" #name=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"email\">Email*</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"user.email\" name=\"email\" #email=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"password\">Password*</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"user.password\" name=\"password\" #password=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"address1\">Address 1*</label>\n          <input type=\"text\" class=\"form-control\" id=\"address1\" [(ngModel)]=\"user.address1\" name=\"address1\" #address=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"address2\">Address 2*</label>\n          <input type=\"text\" class=\"form-control\" id=\"address2\" [(ngModel)]=\"user.address2\" name=\"address2\" #address=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"city\">City*</label>\n          <input type=\"text\" class=\"form-control\" id=\"city\" [(ngModel)]=\"user.city\" name=\"city\" #city=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"state\">State*</label>\n          <input type=\"text\" class=\"form-control\" id=\"state\" [(ngModel)]=\"user.state\" name=\"state\" #state=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"zipcode\">Zipcode*</label>\n          <input type=\"number\" class=\"form-control\" id=\"zipcode\" [(ngModel)]=\"user.zipcode\" name=\"zipcode\" #zipcode=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"phone\">Phone Number*</label>\n          <input type=\"tel\" pattern=\"[0-9]{10,11}\" class=\"form-control\" id=\"phone\" [(ngModel)]=\"user.phone\" name=\"phone\" #phone=\"ngModel\">\n        </div>\n\n        <div *ngIf=\"user.type === 'vendor'\">\n          <div class=\"form-group\">\n            <label for=\"cuisine\">Cuisine*</label>\n            <input type=\"text\" class=\"form-control\" id=\"cuisine\" [(ngModel)]=\"user.cuisine\" name=\"cuisine\" #state=\"ngModel\">\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"businessType\">Business Type*</label>\n            <input type=\"text\" class=\"form-control\" id=\"businesstype\" [(ngModel)]=\"user.businesstype\" name=\"businesstype\" #businesstype=\"ngModel\">\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!signupForm.form.valid\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({ templateUrl: './order-view.component.html' })\nexport class OrderViewComponent implements OnInit {\n\n  public order: any = {};\n  public items: any = [];\n  constructor(\n    private http: HttpClient,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.params && this.activatedRoute.snapshot.params.id) {\n      this.http.get('/api/order/' + this.activatedRoute.snapshot.params.id).subscribe(data => {\n        Object.assign(this.order, data);\n      });\n\n      this.http.get('api/order/' + this.activatedRoute.snapshot.params.id + '/items').subscribe(data => this.items = data);\n    }\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"order\">\n    <dl class=\"row\">\n      <dt class=\"col-md-3\">Order ID:</dt>\n      <dd class=\"col-md-9\">{{ order.orderid }}</dd>\n\n      <dt class=\"col-md-3\">Order Date:</dt>\n      <dd class=\"col-md-9\">{{ order.datecreated | date }}</dd>\n\n      <dt class=\"col-md-3\">Order Total:</dt>\n      <dd class=\"col-md-9\">{{ order.ordertotal | currency }}</dd>\n\n      <dt class=\"col-md-3\">Order Status:</dt>\n      <dd class=\"col-md-9\">{{ order.orderstatus }}</dd>\n\n      <dt class=\"col-md-3\">Delivery Method:</dt>\n      <dd class=\"col-md-9\">{{ order.deliverytype }}</dd>\n    </dl>\n\n    <h2>Order Items</h2>\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered table-striped\">\n        <thead>\n          <tr>\n            <th>Dish Name</th>\n            <th>Quantity</th>\n            <th>Dish Price</th>\n            <th>Total Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of items\">\n            <td>{{ item.dishname }}</td>\n            <td>{{ item.quantity }}</td>\n            <td>{{ item.dishprice | currency }}</td>\n            <td>{{ item.amount | currency }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Component({ templateUrl: './order.component.html' })\nexport class OrderComponent implements OnInit {\n\n  public vendors: any;\n  public menu$: Observable<any>;\n  public quantities: any = {};\n  public items: any = {};\n  public tempItems: any = {};\n  public pickedVendor: any = {};\n  public drivers: any = [];\n  public deliverytype = \"Delivery\";\n  public deliverytypes = [\"Delivery\", \"Pickup\"];\n  constructor(\n    protected router: Router,\n    private http: HttpClient,\n    private modalService: NgbModal,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.http.get('/api/vendor/list').subscribe(data => {\n      this.vendors = data;\n    });\n  }\n\n  menuModal(content, id) {\n    this.tempItems = {};\n    this.menu$ = this.http.get('/api/vendor/' + id + '/menu');\n    this.http.get('/api/vendor/' + id + '/drivers').subscribe(data => this.drivers = data);\n\n    this.modalService.open(content, { backdrop: 'static' }).result.then(\n    (closed) => {\n      this.items = this.tempItems;\n      return this.pickedVendor = this.vendors.find(({ vendorid }) => vendorid === id );\n    }, (dismiss) => {\n      return;\n    });\n  }\n\n  update(dish, qty) {\n    dish['qty'] = qty;\n    dish['amount'] = qty * dish.dishprice;\n    this.tempItems[dish.dishid] = dish;\n  }\n\n  delete(id) {\n    delete this.items[id];\n  }\n\n  public orderTotal() {\n    return Object.values(this.items).reduce(function(acc, obj: any) {\n      return acc + obj.amount;\n    }, 0);\n  }\n\n  checkItems() {\n    return Object.keys(this.items).length === 0;\n  }\n\n  placeOrder() {\n    let order = {};\n    order['main'] = {\n      'customerid': JSON.parse(sessionStorage.getItem('currentUser')).id,\n      'vendorid': this.pickedVendor.vendorid,\n      'ordertotal': this.orderTotal(),\n      'deliverytype': this.deliverytype,\n    }\n    order['details'] = this.items;\n\n    if (this.drivers.length > 0) {\n      return this.http.post('api/order', order).pipe(\n        catchError(err => {\n          this.toastr.error(\"Something is Wrong\");\n          return throwError(err);\n        })\n      ).subscribe((response: any) => {\n        this.pickedVendor = {};\n        this.items = {};\n        this.tempItems = {};\n        this.toastr.success('Order is Placed Successfully');\n        this.router.navigate(['order/' + response.orderid]);\n      })\n    } else {{\n      this.toastr.error(\"Cannot Place Order as No Drivers Available\");\n    }}\n  }\n}\n","<div class=\"container\">\n  <div class=\"heading\">\n    <h1>Places To Eat</h1>\n  </div>\n  <div class=\"table-responsive\">\n    <table class=\"table table-striped\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Phone</th>\n          <th>City</th>\n          <th>State</th>\n          <th>Zipcode</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let v of vendors\">\n          <td>{{ v.vendorname }}</td>\n          <td>{{ v.vendorphone }}</td>\n          <td>{{ v.city }}</td>\n          <td>{{ v.state }}</td>\n          <td>{{ v.zipcode }}</td>\n          <td>\n            <div class=\"btn-group btn-group-sm\">\n              <button type=\"button\" (click)=\"menuModal(contentMenu, v.vendorid)\" class=\"btn btn-primary\"> Order</button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n\n  <h1 *ngIf=\"!checkItems()\">Review Order</h1>\n  <div *ngIf=\"!checkItems()\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Unit Price</th>\n            <th>Quantity</th>\n            <th>Total</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let item of items | keyvalue\">\n              <td>{{ item.value.dishname }}</td>\n              <td>{{ item.value.dishprice | currency }}</td>\n              <td>{{ item.value.qty }}</td>\n              <td>{{ item.value.amount | currency }}\n              <td>\n                <button type=\"button\" (click)=\"delete(item.key)\" class=\"btn btn-primary\"><i class=\"fas fa-trash-alt\"></i></button>\n              </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div>\n      <span class=\"col-auto\"><b>Order Total:</b> </span> {{ orderTotal() | currency }}\n      <br>\n      <select class=\"col-md-6 custom-select\" name=\"deliverytype\" [(ngModel)]=\"deliverytype\">\n        <ng-container *ngFor=\"let d of deliverytypes\">\n          <option [value]=\"d\">{{ d }}</option>\n        </ng-container>\n      </select>\n      <button type=\"button\" (click)=\"placeOrder()\" class=\"btn btn-primary\">PLACE ORDER</button>\n    </div>\n  </div>\n</div>\n\n<ng-template #contentMenu let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Menu</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"table-responsive\">\n        <table class=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Quantity</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let dish of menu$ | async\">\n              <ng-container *ngIf=\"dish.dishstatus\">\n                <td>{{ dish.dishname }}</td>\n                <td>{{ dish.dishprice | currency }}</td>\n                <td><input type=\"number\" name=\"qty\" [(ngModel)]=\"quantities[dish.dishid]\"/></td>\n                <td>\n                  <button type=\"button\" (click)=\"update(dish, quantities[dish.dishid])\" class=\"btn btn-primary\"><i class=\"fas fa-plus\"></i></button>\n                </td>\n              </ng-container>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" ngbTooltip=\"Make Sure To Add Items Before Clicking Save\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { OrderComponent } from './order.component';\nimport { OrderViewComponent } from './order-view.component';\nimport { OrderRoutingModule } from './order.routes';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OrderRoutingModule,\n    FormsModule,\n    NgbModule\n  ],\n  declarations: [\n    OrderComponent,\n    OrderViewComponent\n  ]\n})\nexport class OrderModule {}\n","import { RouterModule, Routes } from '@angular/router';\nimport { OrderComponent } from './order.component';\nimport { OrderViewComponent } from './order-view.component';\nimport { NgModule } from '@angular/core';\n\nexport const orderRoutes: Routes = [\n  {\n    path: '',\n    component: OrderComponent,\n  }, {\n    path: ':id',\n    component: OrderViewComponent,\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(orderRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class OrderRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({ templateUrl: './vendor-edit.component.html' })\nexport class VendorEditComponent implements OnInit {\n\n  public vendor = {\n    vendorid: null,\n    vendorname: '',\n    vendoremail: '',\n    vendorpassword: '',\n    vendoraddress1: '',\n    vendoraddress2: '',\n    city: '',\n    state: '',\n    zipcode: '',\n    vendorphone: '',\n    cuisine: '',\n    businesstype: ''\n  };\n  public orders: any = [];\n  public menu: any = [];\n  public drivers: any = [];\n  public driverType = 'add';\n  public dishType = 'add';\n  public dish = {\n    dishname: '',\n    dishstatus: true,\n    dishprice: 0\n  };\n  public tempDish = {\n    dishname: '',\n    dishstatus: true,\n    dishprice: 0\n  };\n  public tempDriver = {\n    drivername: '',\n    driveremail: '',\n    driverphone: 0,\n    drivervehicle: ''\n  };\n  public driver = {\n    drivername: '',\n    driveremail: '',\n    driverphone: 0,\n    drivervehicle: ''\n  };\n  constructor(\n    private http: HttpClient,\n    private activatedRoute: ActivatedRoute,\n    private modalService: NgbModal,\n    private toastr: ToastrService\n  ) {  }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.snapshot.params && this.activatedRoute.snapshot.params.id) {\n      this.http.get('/api/vendor/' + this.activatedRoute.snapshot.params.id).subscribe(data => Object.assign(this.vendor, data));\n\n      this.http.get('/api/vendor/' + this.activatedRoute.snapshot.params.id + '/orders').subscribe(data => this.orders = data);\n\n      this.http.get('/api/vendor/' + this.activatedRoute.snapshot.params.id + '/menu').subscribe(data => this.menu = data);\n\n      this.http.get('/api/vendor/' + this.activatedRoute.snapshot.params.id + '/drivers').subscribe(data => this.drivers = data);\n    };\n  }\n\n  dishModal(content, type, dish = null) {\n    if (type === 'edit') {\n      this.dish = dish;\n      this.dishType = type;\n    } else {\n      this.dish = this.tempDish;\n    };\n    this.modalService.open(content, { backdrop: 'static' }).result.then(\n    (closed) => {\n      console.log(this.dish);\n      return this.addOrUpdate('dish', this.dishType, this.dish);\n    }, (dismiss) => {\n      this.dish = this.tempDish;\n    });\n  }\n\n  driverModal(content, type, driver = null) {\n    if (type === 'edit') {\n      this.driver = driver;\n      this.driverType = type;\n    } else {\n      this.driver = this.tempDriver;\n    };\n    this.modalService.open(content, { backdrop: 'static' }).result.then(\n    (closed) => {\n      return this.addOrUpdate('driver', this.driverType, this.driver);\n    }, (dismiss) => {\n      this.driver = this.tempDriver;\n    });\n  }\n\n  addOrUpdate(type, itemType, item) {\n    item['vendorid'] = this.vendor.vendorid;\n    if (type == 'dish') {\n      if (itemType === 'add') {\n        return this.http.post('api/menu' , item).subscribe(response => {\n          this.menu.push(response);\n          this.toastr.success(\"Added Successfully\");\n          return response;\n        });\n      } else {\n        return this.http.put('api/menu/' + item['dishid'], item).subscribe(response => {\n          this.toastr.success(\"Edited Successfully\");\n          return response;\n        });\n      }\n    } else if (type === 'driver') {\n      if (itemType === 'add') {\n        return this.http.post('api/driver' , item).subscribe(response => {\n          this.drivers.push(response);\n          this.toastr.success(\"Added Successfully\");\n          return response;\n        });\n      } else {\n        return this.http.put('api/driver/' + item['driverid'], item).subscribe(response => {\n          this.toastr.success(\"Edited Successfully\");\n          return response;\n        });\n      }\n    }\n  }\n\n  delete(type, id) {\n    if (type == 'dish') {\n      return this.http.delete('/api/menu/' + id).subscribe(response => {\n        this.toastr.success(\"Deleted Successfully\");\n        return response;\n      });\n    } else if (type === 'driver') {\n      return this.http.delete('/api/driver/' + id).subscribe(response => {\n        this.toastr.success(\"Deleted Successfully\");\n        return response;\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.vendor.vendorid) {\n      return this.http.put('api/vendor/' + this.vendor.vendorid, this.vendor).subscribe(data => {\n          this.toastr.success(\"Edited Vendor Successfully\");\n          return Object.assign(this.vendor, data);\n      });\n    }\n    return this.http.post('api/vendor', this.vendor).subscribe(data => Object.assign(this.vendor, data));\n  }\n}\n","<div class=\"container-fluid\">\n  <h1 class=\"text-center\">Vendor Information</h1>\n  <div class=\"row\">\n    <div class=\"col\">\n      <form (ngSubmit)=\"onSubmit()\" #vendorForm=\"ngForm\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"vendor.vendorname\" name=\"name\" #name=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"vendor.vendoremail\" name=\"email\" #email=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"vendor.vendorpassword\" name=\"password\" #password=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"address1\">Address 1</label>\n          <input type=\"text\" class=\"form-control\" id=\"address1\" [(ngModel)]=\"vendor.vendoraddress1\" name=\"address1\" #address=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"address2\">Address 2</label>\n          <input type=\"text\" class=\"form-control\" id=\"address2\" [(ngModel)]=\"vendor.vendoraddress2\" name=\"address2\" #address=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"city\">City</label>\n          <input type=\"text\" class=\"form-control\" id=\"city\" [(ngModel)]=\"vendor.city\" name=\"city\" #city=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"state\">State</label>\n          <input type=\"text\" class=\"form-control\" id=\"state\" [(ngModel)]=\"vendor.state\" name=\"state\" #state=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"zipcode\">Zipcode</label>\n          <input type=\"number\" class=\"form-control\" id=\"zipcode\" [(ngModel)]=\"vendor.zipcode\" name=\"zipcode\" #zipcode=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"phone\">Phone Number</label>\n          <input type=\"tel\" pattern=\"[0-9]{10,11}\" class=\"form-control\" id=\"phone\" [(ngModel)]=\"vendor.vendorphone\" name=\"phone\" #phone=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"cuisine\">Cuisine</label>\n          <input type=\"text\" class=\"form-control\" id=\"cuisine\" [(ngModel)]=\"vendor.cuisine\" name=\"cuisine\" #state=\"ngModel\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"businessType\">Business Type</label>\n          <input type=\"text\" class=\"form-control\" id=\"businesstype\" [(ngModel)]=\"vendor.businesstype\" name=\"businesstype\" #businesstype=\"ngModel\">\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!vendorForm.form.valid\">Submit</button>\n      </form>\n    </div>\n    <div class=\"col\">\n      <h3 class=\"text-center\">Menu <button type=\"button\" class=\"ml-1 btn btn-success\" (click)=\"dishModal(contentDish, 'add')\"><i class=\"fas fa-plus\"></i> Add</button></h3>\n      <div class=\"row\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Price</th>\n                <th>Availibility</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let m of menu\">\n                <td>{{ m.dishname }}</td>\n                <td>{{ m.dishprice }}</td>\n                <td>{{ m.dishstatus }}</td>\n                <td>\n                    <button ngbTooltip=\"Edit Item\" type=\"button\" class=\"btn btn-primary\" (click)=\"dishModal(contentDish, 'edit', m)\"><i class=\"fas fa-edit\"></i></button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <h3 class=\"text-center\">Orders</h3>\n      <div class=\"row\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Order #</th>\n                <th>Customer #</th>\n                <th>Total</th>\n                <th>Driver #</th>\n                <th>Fulfillment Type</th>\n                <th>Fulfillment Status</th>\n                <th>Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let o of orders\">\n                <td><a routerLink=\"/order/{{o.orderid}}\">{{ o.orderid }}</a></td>\n                <td>{{ o.customerid }}</td>\n                <td>{{ o.ordertotal }}</td>\n                <td>{{ o.driverid }}</td>\n                <td>{{ o.deliverytype }}</td>\n                <td>{{ o.orderstatus }}</td>\n                <td>{{ o.datecreated | date }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <h3 class=\"text-center\">Drivers<button type=\"button\" class=\"ml-1 btn btn-success\" (click)=\"driverModal(contentDriver, 'add')\"><i class=\"fas fa-plus\"></i> Add</button></h3>\n      <div class=\"row\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>Vehicle</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let d of drivers\">\n                <td>{{ d.drivername }}</td>\n                <td>{{ d.driveremail }}</td>\n                <td>{{ d.driverphone }}</td>\n                <td>{{ d.drivervehicle }}</td>\n                <td>\n                    <button ngbTooltip=\"Edit Item\" type=\"button\" class=\"btn btn-primary\" (click)=\"driverModal(contentDriver, 'edit', d)\"><i class=\"fas fa-edit\"></i></button>\n                    <button ngbTooltip=\"Delete Item\" type=\"button\" class=\"btn btn-danger\" (click)=\"delete('driver', d.driverid)\"><i class=\"fas fa-trash-alt\"></i></button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<ng-template #contentDish let-modal>\n  <div class=\"modal-header\">\n    <h4 *ngIf=\"dishType === 'edit'\" class=\"modal-title\" id=\"modal-basic-title\">Edit</h4>\n    <h4 *ngIf=\"dishType === 'add'\" class=\"modal-title\" id=\"modal-basic-title\">Add</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"dishname\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"dishname\" [(ngModel)]=\"dish.dishname\" name=\"name\" #name=\"ngModel\">\n        <label for=\"dishprice\">Price</label>\n        <input type=\"number\" class=\"form-control\" id=\"dishprice\" [(ngModel)]=\"dish.dishprice\" name=\"price\" #price=\"ngModel\">\n        <label for=\"dishstatus\">Price</label>\n        <input type=\"boolean\" class=\"form-control\" id=\"dishstatus\" [(ngModel)]=\"dish.dishstatus\" name=\"status\" #status=\"ngModel\">\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\n  </div>\n</ng-template>\n\n<ng-template #contentDriver let-modal>\n  <div class=\"modal-header\">\n    <h4 *ngIf=\"driverType === 'edit'\" class=\"modal-title\" id=\"modal-basic-title\">Edit Driver</h4>\n    <h4 *ngIf=\"driverType === 'add'\" class=\"modal-title\" id=\"modal-basic-title\">Add Driver</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form>\n      <div class=\"form-group\">\n        <label for=\"drivername\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"drivername\" [(ngModel)]=\"driver.drivername\" name=\"name\" #name=\"ngModel\">\n        <label for=\"driveremail\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"driveremail\" [(ngModel)]=\"driver.driveremail\" name=\"email\" #email=\"ngModel\">\n        <label for=\"driverphone\">Phone</label>\n        <input type=\"phone\" class=\"form-control\" id=\"driverphone\" [(ngModel)]=\"driver.driverphone\" name=\"phone\" #phone=\"ngModel\">\n        <label for=\"drivervehicle\">Vehicle</label>\n        <input type=\"text\" class=\"form-control\" id=\"drivervehicle\" [(ngModel)]=\"driver.drivervehicle\" name=\"vehicle\" #vehicle=\"ngModel\">\n      </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Save</button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({ templateUrl: './vendor.component.html' })\nexport class VendorComponent implements OnInit {\n\n  public customers: any;\n  constructor(\n    protected router: Router,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit(): void {\n    this.http.get('/api/vendor/list').subscribe(data => {\n      this.customers = data;\n      console.log(data);\n    });\n  }\n\n  delete(id) {\n    return this.http.delete('api/customer/', id).subscribe(() => {console.log(\"good\")});\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { VendorComponent } from './vendor.component';\nimport { VendorEditComponent } from './vendor-edit.component';\nimport { VendorRoutingModule } from './vendor.routes';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VendorRoutingModule,\n    FormsModule,\n    NgbModule\n  ],\n  declarations: [\n    VendorComponent,\n    VendorEditComponent\n  ]\n})\nexport class VendorModule {}\n","import { RouterModule, Routes } from '@angular/router';\nimport { VendorComponent } from './vendor.component';\nimport { VendorEditComponent } from './vendor-edit.component';\nimport { NgModule } from '@angular/core';\n\nexport const vendorRoutes: Routes = [\n  {\n    path: '',\n    component: VendorComponent,\n  }, {\n    path: ':id',\n    component: VendorEditComponent,\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(vendorRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class VendorRoutingModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}